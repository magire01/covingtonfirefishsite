(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[52873],{961885:function(n,a,s){"use strict";s.r(a),s.d(a,{default:function(){return i}}),s(827378);var t,p=s(669595),e={en:{description:"A guide for customizing CSS theme variables in Material UI.",location:"/docs/data/material/experimental-api/css-theme-variables/customization.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n<symbol id="comment-link-icon" viewBox="0 0 24 24">\n  <path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z" />\n</symbol>\n</svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>CSS theme variables - Customization</h1><p class="description">A guide for customizing CSS theme variables in Material UI.</p>\n\n<h2 id="theming">Theming<a aria-labelledby="theming" class="anchor-link" href="#theming" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="theming"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p><code>experimental_extendTheme</code> is an API that extends the default theme. It returns a theme that can only be used by the <code>Experimental_CssVarsProvider</code>.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Experimental_CssVarsProvider <span class="token keyword">as</span> CssVarsProvider<span class="token punctuation">,</span>\n  experimental_extendTheme <span class="token keyword">as</span> extendTheme<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// ...custom theme</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p><code>extendTheme</code> is not the same as <a href="/material-ui/customization/theming/#createtheme-options-args-theme"><code>createTheme</code></a>.\nDo not use them interchangeably.</p>\n<ul>\n<li><code>createTheme()</code> returns a theme for <code>ThemeProvider</code>.</li>\n<li><code>extendTheme()</code> returns a theme for <code>CssVarsProvider</code>.</li>\n</ul>\n\n</aside><h3 id="color-schemes">Color schemes<a aria-labelledby="color-schemes" class="anchor-link" href="#color-schemes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="color-schemes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The major difference from the default approach is in palette customization.\nWith the <code>extendTheme</code> API, you can specify the palette for all color schemes at once (<code>light</code> and <code>dark</code> are built in) under the <code>colorSchemes</code> node.</p>\n<p>Here&#39;s an example of how to customize the <code>primary</code> palette:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> pink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/colors\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">main</span><span class="token operator">:</span> pink<span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">main</span><span class="token operator">:</span> pink<span class="token punctuation">[</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="components">Components<a aria-labelledby="components" class="anchor-link" href="#components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="components"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><a href="/material-ui/customization/theme-components/">Component customization</a> remains the same as the default approach.\nWe recommend using the value from <code>theme.vars.*</code> whenever possible for a better debugging experience:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token comment">// this is the same as writing:</span>\n              <span class="token comment">// backgroundColor: \'var(--mui-palette-background-paper)\',</span>\n              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>background<span class="token punctuation">.</span>paper<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h3 id="channel-tokens">Channel tokens<a aria-labelledby="channel-tokens" class="anchor-link" href="#channel-tokens" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="channel-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>A channel token is a variable that consists of <a href="https://www.w3.org/TR/css-color-4/#color-syntax" target="_blank" rel="noopener nofollow">color space channels</a> but without the alpha component. The value of a channel token is separated by a space, e.g. <code>12 223 31</code>, which can be combined with the <a href="https://www.w3.org/TR/css-color-4/#color-functions" target="_blank" rel="noopener nofollow">color functions</a> to create a translucent color.</p>\n<p>The <code>extendTheme()</code> automatically generates channel tokens that are likely to be used frequently from the theme palette. Those colors are suffixed with <code>Channel</code>, for example:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> light <span class="token operator">=</span> theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>light<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \'25 118 210\'</span>\n<span class="token comment">// This token is generated from `theme.colorSchemes.light.palette.primary.main`.</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>You can use the channel tokens to create a translucent color like this:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme<span class="token punctuation">,</span> ownerState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span>\n            ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> / 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>Don&#39;t use a comma (<code>,</code>) as a separator because the channel colors use empty spaces to define <a href="https://www.w3.org/TR/css-color-4/#transparency" target="_blank" rel="noopener nofollow">transparency</a>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// \uD83D\uDEAB this does not work</span>\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>mainChannel<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> / 0.12)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// ✅ always use `/`</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n\n</aside><h2 id="adding-new-theme-tokens">Adding new theme tokens<a aria-labelledby="adding-new-theme-tokens" class="anchor-link" href="#adding-new-theme-tokens" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="adding-new-theme-tokens"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>You can add other key-value pairs to the theme input which will be generated as a part of the CSS theme variables:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">colorSchemes</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// The best part is that you can refer to the variables wherever you like \uD83E\uDD29</span>\n        <span class="token literal-property property">gradient</span><span class="token operator">:</span>\n          <span class="token string">\'linear-gradient(to left, var(--mui-palete-primary-main), var(--mui-palette-primary-dark))\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">subtle</span><span class="token operator">:</span> <span class="token string">\'var(--mui-palette-neutral-200)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">palette</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">gradient</span><span class="token operator">:</span>\n          <span class="token string">\'linear-gradient(to left, var(--mui-palete-primary-light), var(--mui-palette-primary-main))\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">subtle</span><span class="token operator">:</span> <span class="token string">\'var(--mui-palette-neutral-600)\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Then, you can access those variables from the <code>theme.vars</code> object:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> Divider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'hr\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token string">\'1px solid\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">borderColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>border<span class="token punctuation">.</span>subtile<span class="token punctuation">,</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>gradient<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>Or use <code>var()</code> to refer to the CSS variable directly:</p>\n<div class="MuiCode-root"><pre><code class="language-css"><span class="token comment">/* global.css */</span>\n<span class="token selector">.external-section</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--mui-palette-gradient<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>If you&#39;re using a <a href="/material-ui/experimental-api/css-theme-variables/customization/#changing-variable-prefixes">custom prefix</a>, make sure to replace the default <code>--mui</code>.</p>\n\n</aside><h3 id="typescript">TypeScript<a aria-labelledby="typescript" class="anchor-link" href="#typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>You must augment the theme palette to avoid type errors:</p>\n<div class="MuiCode-root"><pre><code class="language-ts">declare module <span class="token string">\'@mui/material/styles\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">PaletteOptions</span> <span class="token punctuation">{</span>\n    gradient<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    border<span class="token operator">:</span> <span class="token punctuation">{</span>\n      subtle<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span>\n    gradient<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    border<span class="token operator">:</span> <span class="token punctuation">{</span>\n      subtle<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="changing-variable-prefixes">Changing variable prefixes<a aria-labelledby="changing-variable-prefixes" class="anchor-link" href="#changing-variable-prefixes" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="changing-variable-prefixes"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To change the default variable prefix (<code>--mui</code>), provide a string to <code>cssVarPrefix</code> property, as shown below:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">cssVarPrefix</span><span class="token operator">:</span> <span class="token string">\'any\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// the stylesheet will be like this:</span>\n<span class="token comment">// --any-palette-primary-main: ...;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>To remove the prefix, use an empty string as a value:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">cssVarPrefix</span><span class="token operator">:</span> <span class="token string">\'\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// the stylesheet will be like this:</span>\n<span class="token comment">// --palette-primary-main: ...;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="custom-styles-per-mode">Custom styles per mode<a aria-labelledby="custom-styles-per-mode" class="anchor-link" href="#custom-styles-per-mode" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="custom-styles-per-mode"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>To customize the style without creating new tokens, you can use the <code>theme.getColorSchemeSelector</code> utility:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// in default mode.</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n  <span class="token string-property property">\'&amp;:hover\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// in dark mode.</span>\n  <span class="token punctuation">[</span>theme<span class="token punctuation">.</span><span class="token function">getColorSchemeSelector</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n    <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n    <span class="token string-property property">\'&amp;:hover\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'#fff\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>dark<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info"><p>Using this utility is equivalent to writing a plain string <code>&#39;[data-mui-color-scheme=&quot;dark&quot;] &amp;&#39;</code> if you don&#39;t have a custom configuration.</p>\n\n</aside><h2 id="force-a-specific-color-scheme">Force a specific color scheme<a aria-labelledby="force-a-specific-color-scheme" class="anchor-link" href="#force-a-specific-color-scheme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="force-a-specific-color-scheme"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Specify <code>data-mui-color-scheme=&quot;dark&quot;</code> to any DOM node to force the children components to appear as if they are in dark mode.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-mui-color-scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Paper</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TextField</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normal<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>Sign <span class="token keyword">in</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Paper</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="dark-color-scheme-application">Dark color scheme application<a aria-labelledby="dark-color-scheme-application" class="anchor-link" href="#dark-color-scheme-application" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="dark-color-scheme-application"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>For an application that only has a dark mode, set the default mode to <code>dark</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">extendTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// remove the `light` color scheme to optimize the HTML size for server-side application</span>\n<span class="token keyword">delete</span> theme<span class="token punctuation">.</span>colorSchemes<span class="token punctuation">.</span>light<span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> <span class="token attr-name">defaultMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token operator">...</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>For a server-side application, provide the same value to <a href="/material-ui/experimental-api/css-theme-variables/usage/#server-side-rendering"><code>getInitColorSchemeScript()</code></a>:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token function">getInitColorSchemeScript</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">defaultMode</span><span class="token operator">:</span> <span class="token string">\'dark\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning"><p>In development, make sure to clear local storage and refresh the page after you configure the <code>defaultMode</code>.</p>\n\n</aside>'],toc:[{text:"Theming",level:2,hash:"theming",children:[{text:"Color schemes",level:3,hash:"color-schemes"},{text:"Components",level:3,hash:"components"},{text:"Channel tokens",level:3,hash:"channel-tokens"}]},{text:"Adding new theme tokens",level:2,hash:"adding-new-theme-tokens",children:[{text:"TypeScript",level:3,hash:"typescript"}]},{text:"Changing variable prefixes",level:2,hash:"changing-variable-prefixes",children:[]},{text:"Custom styles per mode",level:2,hash:"custom-styles-per-mode",children:[]},{text:"Force a specific color scheme",level:2,hash:"force-a-specific-color-scheme",children:[]},{text:"Dark color scheme application",level:2,hash:"dark-color-scheme-application",children:[]}],title:"CSS theme variables - Customization",headers:{components:[]}}},o={};o.scope={process:{},import:{}};var c={},l=s(824246);function i(){return t||(t=(0,l.jsx)(p.Z,{demos:o,docs:e,demoComponents:c}))}},935453:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/experimental-api/css-theme-variables/customization",function(){return s(961885)}])}},function(n){n.O(0,[75760,36634,39152,35408,85992,56063,76957,41253,46888,21829,81125,68256,96387,46324,70116,73793,16402,86277,49983,18956,58156,76822,78723,69595,49774,92888,40179],function(){return n(n.s=935453)}),_N_E=n.O()}]);